<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/Pz8AApLewA5OK4ATkyzAGRjvQBoZ74AfHrGAIB9xACqqNUA0M/nAHl1vwCdmMsAwr/bAL6x
        zADi3OUA8e3xAOrk6QBrOzsAuJeXANbDwwDt3t4A1cjIAPby8gD8+/sA1cbFANXIxwDo29oA9OroAO7j
        3gCbOgoA+/f1APz6+QCePwoAnT4KAJ09CgCbPAoA9OnjAKVGCgCjRQoAoEIKAKZJCgD8+fcAq08KAKlO
        CgCoTAoA/Pj1ALFWCgCtUgoA/PfzALRbCgCyWQoA/OTOAPzl0QD75dEA/O3fAPvs3gD87eAAumIKALZe
        CgD73sEA++PLAPvkzQD859MA/OnWAPvo1gD86tkA/OvaAPvq2gD87NwA/O7gAPzv4gD88OQA/PHmAPzy
        6AD89OwA/PXuAPz28AD79/MA+/j1AL9pCgC9ZQoArmQXAPzgwwD74MQA/OLGAPzkygD75MsA/OjTAPzq
        1gD77NwA/PDjAPzy5wD89OsAxHEKAMJtCgDNegoAyXUKAPv06wD89u4A0YEKANB+CgD89u0A/Pr3ANWG
        CgDUhQoA0oQKAPz8+wCG9fwAivX8AI72/ACS9vwAlvb8AJr2/AC++fwAv/n8AMn6/AB68vwAgPL8AIL0
        /ACG8vwAjvP8AJDz/ACn9vwAbu38AHTw/AB+7/wAgu/8AIry/ACd5e0AuOnvAGLp/ABp6fwAb+r8AHLr
        /AB17fwAdev8AHrt/ABJ3PcATOL8AE/j/ABP3/kAUuT8AFbl/ABW4/sAWeX8AFzm/ABi5/wAPNb3AEPf
        /ABD2fcAWsriAHfX6QAcy/cAJM73ACzR9wAqveIALb7iADTT9wAzzPIANMnuADG/4gA3wOIAO8LiAEDD
        4gATw/YAE7TiABbI9wAUteIAFrbiABi34gAat+IAHcHxAB244gAixPEAILniACO64gAnxvEAJbviACe8
        4gAryPEAKbziACy75AA3u90AEr3xABGx4QAXv/EAGL/xACmu2AAfpNQAIqfUAA6n5QAbn9QAFJfUABaZ
        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
        AAfwAAAP+AAAH//gB///////
</value>
  </data>
</root>